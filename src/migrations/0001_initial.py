# Generated by Django 4.1.3 on 2022-12-02 12:03

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "phoneNumber",
                    models.CharField(max_length=14, verbose_name="Номер телефона"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "title",
                    models.CharField(max_length=100, verbose_name="НазваниеКурса"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="ОписаниеКурса"
                    ),
                ),
            ],
            options={
                "verbose_name": "Курс",
                "verbose_name_plural": "Курс",
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "customuser_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "students",
                "verbose_name_plural": "students",
            },
            bases=("src.customuser",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "customuser_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("T", "Учитель"), ("A", "Админ")],
                        default="",
                        max_length=1,
                        verbose_name="Роль",
                    ),
                ),
            ],
            options={
                "verbose_name": "Учитель",
                "verbose_name_plural": "Учитель",
            },
            bases=("src.customuser",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "number",
                    models.PositiveIntegerField(blank=True, max_length=100, null=True),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Название Урока",
                    ),
                ),
                (
                    "discription",
                    models.TextField(
                        blank=True, null=True, verbose_name="Описание Урока"
                    ),
                ),
                ("content", ckeditor.fields.RichTextField()),
                (
                    "course_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="src.course"
                    ),
                ),
            ],
            options={
                "verbose_name": "Урок",
                "verbose_name_plural": "Урок",
            },
        ),
        migrations.CreateModel(
            name="Сourse_student_junction",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "cours_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="src.course"
                    ),
                ),
                (
                    "student_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="src.student"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Teacher_Students_junctioon",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "Student_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="src.student"
                    ),
                ),
                (
                    "teacher_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="src.teacher"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Teacher_Course_junctioon",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "cours_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="src.course"
                    ),
                ),
                (
                    "teacher_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="src.teacher"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="teacher",
            name="courses",
            field=models.ManyToManyField(
                blank=True,
                null=True,
                related_name="курсы",
                through="src.Teacher_Course_junctioon",
                to="src.course",
            ),
        ),
        migrations.AddField(
            model_name="student",
            name="course_id",
            field=models.ManyToManyField(
                through="src.Сourse_student_junction", to="src.course"
            ),
        ),
        migrations.AddField(
            model_name="student",
            name="teacher_id",
            field=models.ManyToManyField(
                through="src.Teacher_Students_junctioon", to="src.teacher"
            ),
        ),
    ]
